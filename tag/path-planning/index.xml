<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Path Planning | Jaihonikhil</title>
    <link>https://jaihonikhil.github.io/tag/path-planning/</link>
      <atom:link href="https://jaihonikhil.github.io/tag/path-planning/index.xml" rel="self" type="application/rss+xml" />
    <description>Path Planning</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Wed, 03 Jun 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://jaihonikhil.github.io/media/icon_hu94c20572586274a900963e2d3893d162_15641_512x512_fill_lanczos_center_2.png</url>
      <title>Path Planning</title>
      <link>https://jaihonikhil.github.io/tag/path-planning/</link>
    </image>
    
    <item>
      <title>Navigate the Mars Rover (The Mars Colonization Program)</title>
      <link>https://jaihonikhil.github.io/project/example2/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://jaihonikhil.github.io/project/example2/</guid>
      <description>&lt;p&gt;This was a project/ competition offered by Microsoft India to the selected students as a part of the Engage Mentorship Program.&lt;/p&gt;
&lt;p&gt;This project required to implement and innovate the Pathfinding Library. As a result, We implemented a new heuristics added to our pathfinding visualizer by the name of Optimized Manhatten. Having tested the heuristic on benchmark, we have managed time reduction by approx 50% in case of Astar algorithm and approx 15% reduction in time in Best First Search.&lt;/p&gt;
&lt;p&gt;The length of path and number of operations remain unaltered, hence we have not applied greedy algorithm to reduce time and compromise on the optimal path. We have also added an option of speed in the naivigation bar, the speed with which the rover reaches the space station can be managed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gateway Heuristic&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The maze and patterns present in the repository were added to test a new heuristic called the Gateway heuristic. The gateway heuristic pre-calculates the distances between entrances/exits of the areas. It also proceeds in two phases. Preprocessing Phase: The map is decomposed into areas in an identical way as for the dead-end heuristic.&lt;/p&gt;
&lt;p&gt;We define the boundaries between areas as gateways (or gates). A gateway can be of an arbitrary size, but an artifact of our decomposition algorithm is that its orientation is always either horizontal or vertical. Next we use multiple A* searches to pre-calculate the (static) distance between gates. For each gateway we calculate the path distance to all the other gateways (cost of infinity if no path exists). Alternatively, one could calculate only the distances between gateways within each room and then use a small search to accumulate the total cost during run-time. However, our approach results in more accurate heuristic estimates and faster run-time access.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Unsupervised abnormality detection by using intelligent and heterogeneous autonomous systems( IEEE Signal Processing Cup )</title>
      <link>https://jaihonikhil.github.io/project/project1/</link>
      <pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://jaihonikhil.github.io/project/project1/</guid>
      <description>&lt;p&gt;the competition required to do Unsupervised abnormality detection by using intelligent and heterogeneous autonomous systems where the goal was to detect abnormalities in the behaviour of the ground and aerial systems based on embedded sensor data in real-time.&lt;/p&gt;
&lt;p&gt;Autonomous systems experience failure when the sensors record abnormal data which leads to the crashing of the decision making module if it is not capable of detecting abnormalities. The design of abnormality detection models becomes
an important step in preventing the autonomous systems from
malfunctioning. The organisers of SP cup have provided the dataset
consisting of data from various sensors mounted on a drone.
After identifying the key challenges like limited training data,
non-uniformity in sampling of data from different sensors, low
FPS of camera, absence of ground truth annotations, we have used isolation
forest method, CNN based timeforecasting method and ARMA
model based timeforecasting method to detect the abnormality.
We compare these methods using the performance metric of
Excess Mass Curves&lt;/p&gt;
&lt;p&gt;We were 6th internationally in this competition !&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>INTERNATIONAL ROBOTICS CHALLENGE</title>
      <link>https://jaihonikhil.github.io/project/robotics/</link>
      <pubDate>Sat, 03 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://jaihonikhil.github.io/project/robotics/</guid>
      <description>&lt;p&gt;Designed an Autonomous Pathplanning bot and a Manual bot with scissor mechanism and a gripper, controlled through PS2 for removing the obstacles in the maze&lt;/p&gt;
&lt;p&gt;Helped in the electrical part of the Robots as well through the connections with the motors, Ultrasonic sensors, Arduino, and servos&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
